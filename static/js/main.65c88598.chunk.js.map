{"version":3,"sources":["firebase.js","constant/index.js","helpers/index.js","context/ProjectValue.js","hooks/index.js","context/SelectedProject.js","components/layouts/ProjectOverlay.js","components/layouts/TaskDateOverlay.js","components/layouts/AddTasks.js","components/layouts/Header.js","components/layouts/SingleProject.js","components/layouts/Projects.js","components/layouts/AddProject.js","components/layouts/SideBar.js","components/layouts/Checkbox.js","components/layouts/Tasks.js","components/layouts/Content.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collatedTask","key","name","collatedTasksExist","selectedTask","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectContext","createContext","ProjectValue","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProject","docs","map","project","docId","data","JSON","stringify","useProject","Provider","value","useProjectValue","useContext","SelectedProjectContext","SelectedProjectValue","selectedProject","setSelectProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","onClick","TaskDateOverlay","setTaskDate","showTaskDate","setShowTaskDate","moment","format","add","AddTask","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userId","onKeyDown","role","tabIndex","type","onChange","e","target","Header","darkmode","setDarkMode","setShouldShowMain","src","alt","arial-label","aria-label","SingleProject","showConfirm","setConfirm","doc","delete","Project","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","placeholder","SideBar","showProject","setShowProject","undefined","Checkbox","taskDesc","update","Tasks","collatedTasks","tasks","archivedTask","setArchivedTask","unsubscribe","onSnapshot","newTask","filter","diff","useTasks","length","getTitle","collated","Content","App","darkmodeDefault","render","document","getElementById"],"mappings":"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","file":"static/js/main.65c88598.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAQBcWdS7CBg9Ak6WMKlGjN_wPgWhzNqO4\",\r\n    authDomain: \"etask-b8fec.firebaseapp.com\",\r\n    databaseURL: \"https://etask-b8fec.firebaseio.com\",\r\n    projectId: \"etask-b8fec\",\r\n    storageBucket: \"etask-b8fec.appspot.com\",\r\n    messagingSenderId: \"34316862310\",\r\n    appId: \"1:34316862310:web:d83cd82b244ca768c27ea7\"\r\n});\r\n\r\nexport { firebaseConfig as firebase};","export const collatedTask = [\r\n    {key: 'INBOX', name: 'Inbox'},\r\n    {key: 'TODAY', name: 'Today'},\r\n    {key: 'NEXT_7', name: 'Next 7 days'}\r\n\r\n]"," import {collatedTask} from '../constant';\r\n \r\n\r\n export const getTitle = (projects, id)=>{\r\n    let title =projects.find(project=> project.projectId === id)\r\n     return title;\r\n }\r\n\r\n export const getCollatedTitle = (collatedTasks, key)=>{\r\n    const theCollatedTask = collatedTasks.find(collated=> collated.key === key)\r\n    return theCollatedTask;\r\n }\r\n\r\n export const collatedTasksExist = (selectedTask) => {\r\n     const task = collatedTask.find(task=> task.key === selectedTask)\r\n     return task;\r\n        \r\n }\r\n\r\n export const generatePushId = (()=>{\r\n    const PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n\r\n    const lastRandChars = [];\r\n\r\n    return function() {\r\n       let now = new Date().getTime()\r\n\r\n       const timeStampChars = new Array(8);\r\n\r\n       for(var i= 7; i >= 0; i--){\r\n          timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n          now = Math.floor(now / 64);\r\n       }\r\n\r\n       let id = timeStampChars.join('');\r\n\r\n       for(i= 0; i < 12;  i++){\r\n          id+= PUSH_CHARS.charAt(lastRandChars[i])\r\n       }\r\n\r\n       return id;\r\n    }\r\n })();\r\n\r\n","import React, {createContext, useContext} from 'react';\r\nimport {useProject} from '../hooks';\r\n\r\nexport const ProjectContext = createContext();\r\n\r\nexport const ProjectValue = ({children})=>{\r\n    const {projects, setProjects} = useProject();\r\n\r\n    return(\r\n        <ProjectContext.Provider value={{projects,setProjects}}>\r\n            {children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useProjectValue = ()=> useContext(ProjectContext)","import {useState, useEffect} from 'react';\r\nimport {collatedTasksExist} from '../helpers';\r\nimport moment from 'moment';\r\nimport {firebase} from '../firebase'\r\n\r\nexport const useTasks = selectedTask =>{\r\n    const[tasks, setTask] = useState([]);\r\n    const[archivedTask, setArchivedTask] = useState([]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        let unsubscribe = firebase.firestore().collection('tasks').where('userId', '==', '1')\r\n        // unsubscribe = selectedTask  && !collatedTasksExist(selectedTask)\r\n        //             ?(unsubscribe = unsubscribe.where('projectId', '==', selectedTask))\r\n        //             : selectedTask === 'TODAY'\r\n        //             ?(unsubscribe = unsubscribe.where('date', '==', moment().format('DD/MM/YYYY')))\r\n        //             : selectedTask === 'INBOX' || selectedTask === 0\r\n        //             ?(unsubscribe  = unsubscribe.where('date', '==', ''))\r\n        //             :unsubscribe;\r\n\r\n        if(selectedTask && !collatedTasksExist(selectedTask)){\r\n            unsubscribe= unsubscribe.where('projectId', '==', selectedTask)\r\n        }\r\n        else if( selectedTask === 'TODAY'){\r\n            unsubscribe = unsubscribe.where('date', '==', moment().format('DD/MM/YYYY'))\r\n        }\r\n        else if ( selectedTask === 'INBOX' || selectedTask === 0){\r\n            unsubscribe  = unsubscribe.where('date', '==', '')\r\n        }\r\n\r\n        unsubscribe = unsubscribe.onSnapshot(snapshot => {\r\n            const newTask = snapshot.docs.map(task => ({\r\n                id: task.id,\r\n                ...task.data()\r\n            }))\r\n\r\n            \r\n        setTask(\r\n            selectedTask === 'NEXT_7'\r\n              ? newTask.filter(task => moment(task.date, 'DD/MM/YYYY').diff(moment(), 'days') <=7 && \r\n                task.archived !==true\r\n              )\r\n              : newTask.filter(task => task.archived !==true)\r\n        );\r\n\r\n        setArchivedTask(\r\n           newTask.filter(task => task.archived !==false)\r\n        );\r\n\r\n        })\r\n\r\n        return () =>unsubscribe();\r\n\r\n    }, [selectedTask])\r\n\r\n    return {tasks, archivedTask}\r\n\r\n}\r\n\r\nexport const useProject = () =>{\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        firebase.firestore().collection('project')\r\n        .where('userId', '==', '1')\r\n        .orderBy('projectId')\r\n        .get()\r\n        .then(snapshot => {\r\n            const allProject = snapshot.docs.map(project =>({\r\n                docId: project.id,\r\n                ...project.data()\r\n            }));\r\n\r\n            if(JSON.stringify(allProject) !== JSON.stringify(projects)){\r\n                setProjects(allProject)\r\n            }\r\n        });\r\n    },[projects])\r\n\r\n    return {projects, setProjects}\r\n}","import React, {createContext, useState, useContext} from 'react';\r\n\r\n\r\nexport const SelectedProjectContext = createContext();\r\n\r\nexport const SelectedProjectValue = ({children})=>{\r\n    const [selectedProject, setSelectProject] = useState('1');\r\n\r\n    return(\r\n        <SelectedProjectContext.Provider value={{selectedProject,setSelectProject}}>\r\n            {children}\r\n        </SelectedProjectContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useSelectedProjectValue = ()=> useContext(SelectedProjectContext);","import React from 'react';\r\nimport {useProjectValue} from '../../context';\r\n\r\nexport const ProjectOverlay = ({\r\n    setProject,\r\n    showProjectOverlay,\r\n    setShowProjectOverlay\r\n})=>{\r\n   const {projects} = useProjectValue();\r\n\r\n   return(\r\n       projects &&\r\n       showProjectOverlay && (\r\n           <div className='project-overlay' data-testid='project-overlay'>\r\n               <ul className='project-overlay__list'>\r\n                   {projects.map(project=>(\r\n                   <li\r\n                  key={project.projectId}\r\n                  data-testid='project-overlay-action' \r\n                  onClick={()=>{\r\n                 setProject(project.projectId)\r\n                 setShowProjectOverlay(false)\r\n                   }}                    \r\n               > \r\n                      {project.name}\r\n             </li>\r\n                   ))}\r\n               </ul>\r\n           </div>\r\n       )\r\n   )\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    FaSpaceShuttle,\r\n    FaRegPaperPlane,\r\n    FaSun\r\n} from 'react-icons/fa';\r\n\r\nexport const TaskDateOverlay = ({\r\n    setTaskDate,\r\n    showTaskDate,\r\n    setShowTaskDate\r\n})=> showTaskDate && (\r\n    <div className='task-date' data-testid='task-date-overlay'>\r\n        <ul className='task-date__list'>\r\n            <li\r\n              data-testid='task-date-today'\r\n              onClick={()=>{\r\n                  setShowTaskDate(false);\r\n                  setTaskDate(moment().format('DD/MM/YYYY'))\r\n              }}\r\n            >\r\n                <span>\r\n                    <FaSpaceShuttle/>\r\n                </span>\r\n                <span>Today</span>\r\n            </li>\r\n\r\n            <li\r\n               data-testid='task-date-tomorrow'\r\n               onClick={()=>{\r\n                   setShowTaskDate(false);\r\n                   setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'))\r\n               }}\r\n            >\r\n                <span>\r\n                    <FaSun/>\r\n                </span>\r\n                <span>Tomorrow</span>\r\n            </li>\r\n\r\n            <li\r\n               data-testid='task-date-next-week'\r\n               onClick={()=>{\r\n                   setShowTaskDate(false);\r\n                   setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'))\r\n               }}\r\n            >\r\n                <span>\r\n                    <FaRegPaperPlane/>\r\n                </span>\r\n                <span>Next Week</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n)\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport moment from 'moment';\r\nimport {firebase} from '../../firebase'\r\nimport {useSelectedProjectValue} from '../../context'\r\nimport {ProjectOverlay} from './ProjectOverlay';\r\nimport { TaskDateOverlay } from './TaskDateOverlay';\r\nimport {\r\n    FaRegCalendarAlt,\r\n    FaRegListAlt\r\n} from 'react-icons/fa';\r\n\r\nexport const AddTask = ({\r\n    showAddTaskMain = true,\r\n    shouldShowMain = false,\r\n    showQuickAddTask,\r\n    setShowQuickAddTask,\r\n})=>{\r\n    const [task, setTask] = useState('');\r\n    const [taskDate, setTaskDate] = useState('');\r\n    const [project, setProject] = useState('');\r\n    const [showMain, setShowMain] = useState(shouldShowMain);\r\n    const [showProjectOverlay, setShowProjectOverlay] = useState(false);\r\n    const [showTaskDate,setShowTaskDate] = useState(false);\r\n\r\n    const {selectedProject}= useSelectedProjectValue();\r\n\r\n\r\n    const addTask = ()=>{\r\n        const projectId = project || selectedProject\r\n        let collatedDate = '';\r\n         \r\n        // if today and next 7days is clicked at the sidebar, compute the date\r\n        if(projectId === 'TODAY'){\r\n           collatedDate = moment().format('DD/MM/YYYY')\r\n        }else if (projectId === 'NEXT_7'){\r\n           collatedDate = moment().add(7, 'days').format('DD/MM/YYYY')\r\n        }\r\n\r\n        return(\r\n            task &&\r\n            projectId &&\r\n            firebase\r\n            .firestore()\r\n            .collection('tasks')\r\n            .add({\r\n                archived: false,\r\n                date: collatedDate || taskDate,\r\n                projectId,\r\n                task,\r\n                userId: '1'\r\n            })\r\n            .then(()=>{\r\n                setTask('');\r\n                setShowMain(false);\r\n                setProject([...project]);\r\n                setShowProjectOverlay(false);\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    //jsx here\r\n    return (\r\n       <div className={ showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\r\n           data-testid='add-task-comp'\r\n       >\r\n           {showAddTaskMain && (\r\n               <div \r\n                  className='add-task__shallow'\r\n                  data-testid='show-main-action'\r\n                  onClick={()=> setShowMain(!showMain)}\r\n                  onKeyDown={()=> setShowMain(!showMain)}\r\n                  role=\"button\"\r\n                  tabIndex={0}\r\n               >\r\n                   <span className='add-task__plus'>+</span>\r\n                   <span className='add-task__text'>Add Task </span>\r\n               </div>\r\n           )}\r\n\r\n           {(showMain || showQuickAddTask) && (\r\n               <div className='add-task__main' data-testid='add-task-main'>\r\n                   { showQuickAddTask && (\r\n                       <div data-testid='quick-add-task'>\r\n                        <h2 className='header'>Quick Add Task</h2>\r\n                        <span\r\n                        className='add-task__cancel-x'\r\n                        data-testid='add-task-quick-cancel'\r\n                        onClick={()=>{\r\n                            setShowMain(false);\r\n                            setShowProjectOverlay(false);\r\n                            setShowQuickAddTask(false);\r\n                        }}\r\n\r\n                        onKeyDown={()=>{\r\n                            setShowMain(false);\r\n                            setShowProjectOverlay(false);\r\n                            setShowQuickAddTask(false);\r\n                        }}\r\n                        tabIndex={0}\r\n                        role='button'\r\n                        >\r\n                            X\r\n                        </span>\r\n                       </div>\r\n                   )}\r\n\r\n                   <TaskDateOverlay\r\n                   setTaskDate={setTaskDate}\r\n                   showTaskDate={showTaskDate}\r\n                   setShowTaskDate={setShowTaskDate}\r\n                   />\r\n                   <ProjectOverlay \r\n                    setProject={setProject}\r\n                    setShowProjectOverlay={setShowProjectOverlay} \r\n                    showProjectOverlay={showProjectOverlay}\r\n                    />\r\n\r\n                   <input\r\n                      type='text'\r\n                      value={task}\r\n                      className='add-task__content'\r\n                      data-testid='add-task-content'\r\n                      onChange={(e)=> setTask(e.target.value)}\r\n\r\n                   />\r\n                   <button\r\n                    type='button'\r\n                    className='add-task__submit'\r\n                    data-testid='add-task'\r\n                    onClick={()=> {\r\n                        showQuickAddTask ? addTask() && setShowQuickAddTask(false):addTask()\r\n                    }}\r\n                    >\r\n                        Add task\r\n                   </button>\r\n                   {!showQuickAddTask && (\r\n                       <span\r\n                       className='add-task__cancel'\r\n                       data-testid='add-task-main-cancel'\r\n                        onClick={()=>{\r\n                            setShowMain(false);\r\n                            setShowProjectOverlay(false)\r\n                        }}\r\n\r\n                        onKeyDown={()=>{\r\n                            setShowMain(false);\r\n                            setShowProjectOverlay(false)\r\n                        }}\r\n                        tabIndex={0}\r\n                        role='button'\r\n                       >\r\n                           Cancel \r\n                       </span>\r\n                   )}\r\n\r\n                   <span\r\n                   onClick={()=> setShowProjectOverlay(!showProjectOverlay)}\r\n                   onKeyDown={()=> setShowProjectOverlay(!showProjectOverlay)}\r\n                   tabIndex={0}\r\n                   role='button'\r\n                   data-testid='show-project-overlay'\r\n                   className='add-task__project'\r\n                   >\r\n                       <FaRegListAlt/>\r\n                   </span>\r\n\r\n                   <span\r\n                    onClick={()=> setShowTaskDate(!showTaskDate)}\r\n                    onKeyDown={()=> setShowTaskDate(!showTaskDate)}\r\n                    tabIndex={0}\r\n                    role='button'\r\n                    data-testid='show-task-date-overlay'\r\n                    className='add-task__date'\r\n                   >\r\n                       <FaRegCalendarAlt/>\r\n                   </span>\r\n                   </div>\r\n           )}\r\n       </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { AddTask} from './AddTasks';\r\nimport { FaPizzaSlice} from 'react-icons/fa'\r\n\r\n\r\n  export const Header = ({\r\n      darkmode,\r\n      setDarkMode\r\n    })=> {\r\n        const [shouldShowMain, setShouldShowMain] = useState(false);\r\n        const [showQuickAddTask, setShowQuickAddTask] = useState(false);\r\n      return (\r\n          <header className='header' data-testid='header'>\r\n             <nav>\r\n                 <div className='logo'>\r\n                    <img src = 'images/logo.png' alt=\"Todoist\"  />\r\n                 </div>\r\n\r\n                 <div className='settings'>\r\n                     <ul>\r\n                         <li \r\n                       \r\n                         className='settings__add'\r\n                        \r\n                         >\r\n                             <button\r\n                               data-testid='quick-add-task-action'\r\n                               arial-label='Quick Add Task'\r\n                               type='button'\r\n                               onClick={()=>{\r\n                                    setShouldShowMain(true);\r\n                                    setShowQuickAddTask(true);\r\n                                }}\r\n                                onKeyDown={()=>{\r\n                                    setShouldShowMain(true);\r\n                                    setShowQuickAddTask(true);\r\n                                }}\r\n                             >\r\n                             +\r\n                             </button>\r\n                            \r\n                         </li>\r\n                         <li \r\n                         \r\n                         className='settings__darkmode'\r\n                         >\r\n                             <button\r\n                             data-testid='darkmode-action'\r\n                             aria-label='DarkMode on/off'\r\n                             type='button'\r\n                             onClick={()=> setDarkMode(!darkmode)}\r\n                             onKeyDown={()=> setDarkMode(!darkmode)}\r\n                             >\r\n                                 <FaPizzaSlice/>\r\n                             </button>\r\n                         </li>\r\n                    </ul>\r\n\r\n                 </div>\r\n             </nav>\r\n\r\n             <AddTask\r\n             showAddTaskMain={false}\r\n             shouldShowMain={shouldShowMain}\r\n             setShowQuickAddTask={setShowQuickAddTask}\r\n             showQuickAddTask={showQuickAddTask}\r\n             />\r\n          </header>\r\n      )\r\n  }","import React, {useState} from 'react';\r\nimport {FaTrashAlt} from 'react-icons/fa';\r\nimport {firebase} from '../../firebase';\r\nimport { useSelectedProjectValue, useProjectValue } from '../../context';\r\n\r\nexport const SingleProject = ({project})=>{\r\n    const {setProjects} = useProjectValue();\r\n    const {setSelectProject} = useSelectedProjectValue();\r\n    const [showConfirm, setConfirm] = useState(false);\r\n\r\n    const deleteProject = (docId)=>{\r\n        firebase\r\n        .firestore()\r\n        .collection('project')\r\n        .doc(docId)\r\n        .delete()\r\n        .then(()=>{\r\n            setProjects('')\r\n            setSelectProject('Inbox')\r\n        });\r\n\r\n    };\r\n\r\n    return(\r\n        <>\r\n        <span className='sidebar__dot'></span>\r\n        <span className='sidebar__project-name'>{project.name}</span>\r\n        <span className='sidebar__project-delete'\r\n              data-testid='project-delete'\r\n              onClick={()=> setConfirm(!showConfirm)}>\r\n\r\n               <FaTrashAlt/>\r\n            { showConfirm && (\r\n                <div className='project-delete-modal'>\r\n                    <div className='project-delete-modal__inner'>\r\n                        <p>Are You Sure You Want To Delete This Project</p>\r\n                        <button onClick={()=> deleteProject(project.docId)}>\r\n                            Delete\r\n                        </button>\r\n                        <span onClick={()=> setConfirm(!showConfirm)}>Cancel</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </span>\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport { useSelectedProjectValue,useProjectValue} from '../../context';\r\nimport {SingleProject} from './SingleProject'\r\n\r\n\r\nexport const Project = ({activeValue = null})=>{\r\n    const [ active, setActive] = useState(activeValue);\r\n    const { setSelectProject} = useSelectedProjectValue();\r\n    const { projects} = useProjectValue();\r\n\r\n    return(\r\n        projects && projects.map(project=> (\r\n            <li\r\n              key={project.projectId}\r\n              data-doc-id={project.docId}\r\n              data-testid='project'\r\n              className={\r\n                  active === project.projectId ? 'active sidebar__project'\r\n                  : 'sidebar__project'\r\n              }\r\n\r\n            >\r\n                <div\r\n             data-testid='project-action'\r\n              role='button'\r\n              tabIndex={0}\r\n              onClick = {() => {\r\n                  setActive(project.projectId)\r\n                  setSelectProject(project.projectId)\r\n              }}\r\n\r\n              \r\n              onKeyDown = {() => {\r\n                setActive(project.projectId)\r\n                setSelectProject(project.projectId)\r\n            }}\r\n                >\r\n                <SingleProject project={project}/>\r\n                </div>\r\n               \r\n            </li>\r\n        ))\r\n    );\r\n}","import React, { useState } from 'react'\r\nimport { firebase } from '../../firebase'\r\nimport {generatePushId} from '../../helpers';\r\nimport { useProjectValue } from '../../context';\r\n\r\n\r\nexport const AddProject = ({shouldShow = false})=> {\r\n    const [show, setShow] = useState(shouldShow);\r\n    const [projectName, setProjectName] = useState('');\r\n    const { setProjects} = useProjectValue();\r\n    const projectId = generatePushId();\r\n\r\n    const addProject = () =>\r\n        projectName && \r\n        firebase\r\n        .firestore()\r\n        .collection('project')\r\n        .add({\r\n            name: projectName,\r\n            projectId,\r\n            userId: '1'\r\n        })\r\n        .then(()=>{\r\n            setProjects('');\r\n            setProjectName('');\r\n            setShow(false);\r\n        });\r\n    \r\n\r\n    return(\r\n        <div className='add-project' data-testid='add-project'>\r\n            { show && (\r\n                <div className='add-project__input' data-testid='add-project-inner'>\r\n                    <input\r\n                      data-testid='project-name'\r\n                      type='text'\r\n                      className='add-project__name'\r\n                      value={projectName}\r\n                      onChange={(e)=> setProjectName(e.target.value)}\r\n                      placeholder='Name your project'\r\n                    />\r\n                    <button \r\n                    className='add-project__submit'\r\n                    type='button'\r\n                    onClick={()=> addProject()}\r\n                    data-testid='add-project-submit'>\r\n                        Add \r\n                    </button>\r\n                    \r\n                    <span\r\n                    onClick={()=>setShow(false)}\r\n                    onKeyDown={()=>setShow(false)}\r\n                    data-testid='hide-project-overlay'\r\n                    className='add-project__cancel'\r\n                    role='button'\r\n                    tabIndex={0}\r\n                    >\r\n                        Cancel\r\n                    </span>\r\n                </div>\r\n            )}\r\n            <span className='add-project__plus'>+</span>\r\n            <span\r\n              arial-label='Add Project'\r\n              data-testid='add-project-action'\r\n              className='add-project__text'\r\n              onClick={()=> setShow(!show)}\r\n              onKeyDown={()=> setShow(!show)}\r\n              role='button'\r\n              tabIndex={-1}\r\n            >\r\n                Add Project\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    FaChevronDown,\r\n    FaInbox,\r\n    FaRegCalendarAlt,\r\n    FaRegCalendar\r\n} from 'react-icons/fa';\r\nimport {Project} from './Projects';\r\nimport {useSelectedProjectValue} from '../../context';\r\nimport { AddProject } from './AddProject';\r\n\r\nexport const SideBar = ()=>{\r\n    const [showProject, setShowProject] = useState(true);\r\n    const [active, setActive] = useState('inbox');\r\n    const {setSelectProject}  =  useSelectedProjectValue();\r\n    return (\r\n        <div className='sidebar' data-testid='sidebar'>\r\n            <div className='sidebar__generic'>\r\n                <ul>\r\n                    <li  data-testid='inbox' className={ active === 'inbox' ? 'active' : undefined }\r\n                      >\r\n                          <div\r\n                           data-testid='inbox-action'\r\n                            onClick={()=> {\r\n                                setActive('inbox');\r\n                                setSelectProject('INBOX');\r\n                             }}\r\n                             onKeyDown={()=> {\r\n                                setActive('inbox');\r\n                                setSelectProject('INBOX');\r\n                             }}\r\n                             role='button'\r\n                             tabIndex={0}\r\n                             aria-label=\"Show Inbox Task\"\r\n                          >\r\n                          <span>\r\n                            <FaInbox/>\r\n                        </span>\r\n                        <span>Inbox</span>\r\n                          </div>\r\n                      \r\n                    </li>\r\n                    <li data-testid='today' className={ active === 'today' ? 'active' : undefined }\r\n                       \r\n                        >\r\n                            <div\r\n                             data-testid='today-action'\r\n                             onClick={()=> {\r\n                                setActive('today');\r\n                                setSelectProject('TODAY');\r\n                             }}\r\n                             onKeyDown={()=> {\r\n                                setActive('today');\r\n                                setSelectProject('TODAY');\r\n                             }}\r\n                          \r\n                             role='button'\r\n                             tabIndex={0}\r\n                             aria-label=\"Show Today Task\"\r\n                            >\r\n\r\n                        <span>\r\n                            <FaRegCalendar/>\r\n                        </span>\r\n                        <span>Today</span>\r\n                        </div>\r\n                        \r\n                    </li>\r\n                    <li data-testid='next_7' className={ active === 'next_7' ? 'active' : undefined }\r\n                  >\r\n                          <div\r\n                          data-testid='next-7-action'\r\n                            onClick={()=> {\r\n                                setActive('next_7');\r\n                                setSelectProject('NEXT_7');\r\n                             }}\r\n                             onKeyDown={()=> {\r\n                                setActive('next_7');\r\n                                setSelectProject('NEXT_7');\r\n                             }}\r\n                             role='button'\r\n                             tabIndex={0}\r\n                             aria-label=\"Show Next 7 Task\"\r\n                          >\r\n                        <span>\r\n                            <FaRegCalendarAlt/>\r\n                        </span>\r\n                        <span>Next 7 days</span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n\r\n            <div \r\n            className='sidebar__middle'\r\n             onClick={()=> setShowProject(!showProject)}\r\n             onKeyDown={()=> setShowProject(!showProject)}\r\n             >\r\n                <span >\r\n                    <FaChevronDown className={ !showProject ? 'hidden-projects' : undefined}/>\r\n                </span>\r\n                <h2>Projects</h2>  \r\n            </div>\r\n\r\n            <ul className='sidebar__projects'>\r\n               { showProject && <Project/>}\r\n            </ul>\r\n            {showProject && <AddProject/>}\r\n           \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {firebase} from '../../firebase' \r\n\r\nexport const Checkbox = ({id, taskDesc})=> {\r\n    const archivedTask = ()=>{\r\n        firebase\r\n        .firestore()\r\n        .collection('tasks')\r\n        .doc(id)\r\n        .update({\r\n            archived: true\r\n    \r\n        })\r\n    };\r\n\r\n    return(\r\n        <div \r\n        aria-label={`Mark ${taskDesc} as done!`}\r\n        className = 'checkbox-holder' \r\n        data-testid= 'checkbox-action'\r\n        onClick={()=> archivedTask()}>\r\n            <span className='checkbox' />\r\n        </div>\r\n    );\r\n   \r\n}","import React from 'react';\r\nimport {Checkbox} from './Checkbox';\r\nimport {useTasks} from '../../hooks';\r\nimport {getTitle, getCollatedTitle, collatedTasksExist} from '../../helpers';\r\nimport {useSelectedProjectValue, useProjectValue} from '../../context';\r\nimport {collatedTask} from '../../constant'\r\nimport {AddTask} from './AddTasks'\r\n\r\n\r\nexport const Tasks = ()=>{\r\n\r\n    const {selectedProject} = useSelectedProjectValue();\r\n    const {projects} = useProjectValue();\r\n    const {tasks} = useTasks(selectedProject);\r\n\r\n\r\n    let projectName = '';\r\n   \r\n\r\n    if(projects.length > 0  && selectedProject && !collatedTasksExist(selectedProject)){\r\n        projectName = getTitle(projects, selectedProject).name    \r\n    }\r\n    \r\n    if(projects.length > 0 && selectedProject && collatedTasksExist(selectedProject)){\r\n        projectName = getCollatedTitle(collatedTask, selectedProject).name\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='tasks' data-testid ='tasks'>\r\n<h2 data-testid = 'project-name'>{projectName}</h2>\r\n            <ul className='tasks__list'>\r\n                { tasks.map(task =>(\r\n                         <li key={`${task.id}`}>\r\n                        <Checkbox id ={task.id}/>\r\n                        <span>{task.task}</span>\r\n                    </li>\r\n                ))} \r\n            </ul>\r\n            <AddTask/>\r\n            </div>\r\n           \r\n\r\n            \r\n\r\n            \r\n\r\n      \r\n    );\r\n}","import React from 'react'\r\nimport {SideBar} from './SideBar';\r\nimport {Tasks} from './Tasks'\r\n\r\n\r\n export const Content = () => {\r\n\r\n     return(\r\n       <section className='content'>\r\n       <SideBar/>\r\n       <Tasks/>\r\n       </section>\r\n      \r\n     )\r\n }","import React, { useState } from 'react';\nimport { Header} from './components/layouts/Header'\nimport { Content } from './components/layouts/Content';\nimport { ProjectValue, SelectedProjectValue} from './context';\n\n\n export const App = ({darkmodeDefault = false}) =>  { \n    const [darkmode, setDarkMode] = useState(darkmodeDefault)\n  return (\n    <SelectedProjectValue>\n      <ProjectValue>\n        <main\n         data-testid='application'\n         className={darkmode ? 'darkmode' : undefined}>\n           <Header\n           darkmode={darkmode}\n            setDarkMode={setDarkMode}\n           />\n           <Content/>\n        </main>\n      </ProjectValue>\n   </SelectedProjectValue>\n   \n  );\n}\n\n\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {App}from './App';\nimport './App.scss';\n\n\n\nrender(<App/>,  document.getElementById('root'));\n\n"],"sourceRoot":""}